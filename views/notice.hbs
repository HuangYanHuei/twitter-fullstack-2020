<section id="Huei-region" class="">
  <div class="flex-message-page">
    <!--左側導覽列-->
    <section class="left-region-sidebar">
      {{> home-tabs-middleware-ByYS route='notice'}}
    </section>

    <div class="privacy-notice">
      <div class="user-notice-top">
        <span>
          通知
        </span>
        <button class="btn btn-checked" onclick="cleanAllNotifications()">
          全部已讀
        </button>
      </div>
      <ul class="ul-user-notice" id="ul-user-notice">

        {{!-- 通知區塊 由 js 動態產生 --}}

      </ul>
    </div>


    <section class="left-region-sidebar">
      {{> notice-user-tabs-middleware}}
    </section>
  </div>
</section>

<script>
  // ------ 前端使用的 id 
  const loginUserId = Number('{{loginUser.id}}')

  // ------button function for posting follow like comment reply 

  socket.on('updateNotification', ({ follow, like, tweet, reply }) => {
    // 把收到的 notification 資料整理並依時間排序
    const array = follow.concat(like, tweet, reply)
    array.sort(function (a, b) {
      return new Date(b.createdAt) - new Date(a.createdAt)
    })
    // 抓出要更新頁面的 DOM 
    const ul_user_noticeDOM = $('#ul-user-notice')
    let resultRawHTML = ''
    // 將每一筆資料依分類產生 rawHTML
    array.forEach((note) => {
      const celebrity = note.celebrity.name
      if (note.followEvent) {
        resultRawHTML += generateFollowNotificationRawHTML(note)
      } else if (note.likeEvent) {
        resultRawHTML += generateLikeNotificationRawHTML(note)
      } else if (note.tweetEvent) {
        resultRawHTML += generateTweetNotificationRawHTML(note)
      } else if (note.replyEvent) {
        resultRawHTML += generateReplyNotificationRawHTML(note)
      }

    })
    // 更新頁面
    ul_user_noticeDOM.html(resultRawHTML)
  })


  function generateFollowNotificationRawHTML (note) {

    const rawHTML =
      `
      <li class="li-user-notice">
        <a class="" href="/users/${note.celebrityId}/tweets">
          <img src="${note.celebrity.avatar}" alt="Picture"
            class="img-user-avatar">
        </a>
        <div class="div-user-notice-title">
          ${note.celebrity.name} 開始追蹤 ${checkTargetIsMyself(note.followEvent.User.id) ? '你' : note.followEvent.User.name}
        </div>
      </li>
      `
    return rawHTML
  }

  function generateLikeNotificationRawHTML (note) {

    const rawHTML =
      `
      <li class="li-user-notice">
        <a class="" href="/users/${note.celebrityId}/tweets">
          <img src="${note.celebrity.avatar}" alt="Picture"
            class="img-user-avatar">
        </a>
        <div class="div-user-notice-title">
          ${note.celebrity.name} 喜歡 ${checkTargetIsMyself(note.likeEvent.Tweet.User.id) ? '你' : note.likeEvent.Tweet.User.name} 的貼文          
        </div>
      </li>
      `
    return rawHTML
  }

  function generateTweetNotificationRawHTML (note) {

    const rawHTML =
      `
      <li class="li-user-notice">
        <a class="" href="/users/${note.celebrityId}/tweets">
          <img src="${note.celebrity.avatar}" alt="Picture"
            class="img-user-avatar">
        </a>
        <div class="div-user-notice-title">
          ${note.celebrity.name} 有新的推文通知
        </div>
        <div class="div-user-notice-content">
          ${note.tweetEvent.description}
        </div>
      </li>
      `
    return rawHTML
  }

  function generateReplyNotificationRawHTML (note) {

    const rawHTML =
      `
      <li class="li-user-notice">
        <a class="" href="/users/${note.celebrityId}/tweets">
          <img src="${note.celebrity.avatar}" alt="Picture"
            class="img-user-avatar">
        </a>
        <div class="div-user-notice-title">
          ${note.celebrity.name} 回覆了 ${checkTargetIsMyself(note.replyEvent.Tweet.User.id) ? '你' : note.replyEvent.Tweet.User.name} 的一則推文          
        </div>
        <div class="div-user-notice-content">
          ${note.replyEvent.comment}
        </div>
      </li>
      `
    return rawHTML
  }

  function checkTargetIsMyself (userId) {
    return userId === loginUserId
  }

  function cleanAllNotifications () {
    const unreadCount = document.querySelector('.ul-user-notice').childElementCount
    if (unreadCount) {
      $('#tab-notification').removeClass('main-color-blink')
      $('#tab-notification').find('.nav-circle-count').html('')
      $('#tab-notification').find('.nav-circle').removeClass('nav-circle-count')
      return socket.emit('cleanAllNotifications')
    }
    return alert('通知已經全部已讀')

  }

</script>